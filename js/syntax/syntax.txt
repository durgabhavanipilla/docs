       Syntax text in Javascript
  What is syntax?
  JavaScript syntax is the set of rules and regulationgs, how JavaScript 
  programs are constructed.
 ====
  What are JavaScript Values?
  The JavaScript syntax defines two types of values:
    1.Fixed values
    2.Variable values
  Fixed values are called Literals.
  Variable values are called Variables.
 ====
  What are the rules for JavaScript Literals?
    The two most important rules for fixed values/literals are:
  1.Numbers are written with or without decimals:
    Example:
	  1000
      10.50
  2.Strings are text, written within double or single quotes:
    Example:
	   "John Doe"
       'John Doe'
  ====
  What are JavaScript Variables?
   In a programming language, variables are used to store data values.
   JavaScript uses the keywords var, let and const to declare variables.
   An equal sign(=) is used to assign values to variables.
   Example:
       let x;
	   x = 5;
  =====
  What are JavaScript Operators?
  There are two types of operators.
    1.Arithmetic operators.
	2.Assignment operators.
   Javascript uses Arithmetic operators ( + - * / ) to compute values.
   Javascript uses Assignment operator ( = ) to assign values to variables.
   
 =====
  What is JavaScript Expressions?
   An expression is a combination of values, variables, and operators,
   which computes to a value.
   The computation is called an evaluation.
   Expressions can also contain variable values.
   The values can be of various types, such as numbers and strings.
   Example:
       "John" + " " + "Doe"
	    It executes to "John Doe"
		var n1 = 10 + 12;    -----22 ------>values are printing
		var n2 = "10" + "12";  ----1012--->printing as string
======
  What are JavaScript Keywords?
   JavaScript keywords [63] are used to identify actions to be performed.
    1.The let keyword tells the browser to create variables.
    2.The var keyword also tells the browser to create variables.
    By using var or let keywords 
 ======
 JavaScript Comments:
   Not all JavaScript statements are "executed".
   Code after double slashes // or between /* and * / is treated
   as a comment.
   Comments are ignored, and will not be executed.
   Example:
     <script>
      let x;
      x = 5;
     // x = 6; I will not be executed
     document.getElementById("demo").innerHTML = x;
    </script>
 =====
  JavaScript Identifiers / Names:
  
   Identifiers are JavaScript names.
   Identifiers are used to name variables and keywords, and functions.
   The rules for legal names are the same in most programming languages.
   A JavaScript name must begin with:
   1.A letter (A-Z or a-z)
   2.A dollar sign ($)
   3.Or an underscore (_)
  Subsequent characters may be letters, digits, underscores, or dollar signs.
 Note:
    Numbers are not allowed as the first character in names.
    This way JavaScript can easily distinguish identifiers from numbers.
 =====
  JavaScript is Case Sensitive:
  
   All JavaScript identifiers are case sensitive. 
   The variables lastName and lastname, are two different variables.
   Example:
     <script>
     let lastname, lastName;
     lastName = "Doe";
     lastname = "Peterson";
     document.getElementById("demo").innerHTML = lastName;
    </script>
	JavaScript does not interpret LET or Let as the keyword let.
 =====
 JavaScript and Camel Case:
    Historically, programmers have used different ways of joining 
	multiple words into one variable name.
  Hyphens:
     first-name, last-name, master-card, inter-city.
  Hyphens are not allowed in JavaScript. 
  They are reserved for subtractions.
 Underscore:
    first_name, last_name, master_card, inter_city.
 Upper Camel Case (Pascal Case):
    FirstName, LastName, MasterCard, InterCity.
 Lower Camel Case:
 JavaScript programmers tend to use camel case that 
 starts with a lowercase letter:
   firstName, lastName, masterCard, interCity.
 ======= 
  JavaScript Character Set:
   JavaScript uses the Unicode character set.
   Unicode covers (almost) all the characters, punctuations, 
   and symbols in the world.
	
   

   
   

  
  
	
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
	   
	   
	   


